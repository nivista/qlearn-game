{"version":3,"sources":["../webpack/bootstrap","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","constants.js","gameLogic.js","worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_toConsumableArray","arr","Array","isArray","arr2","length","iter","iterator","toString","from","TypeError","freeze","HUMAN_PLAY","BOT_PLAY","BOT_TRAIN","move","grid","intendedDir","agentLoc","costOfLiving","failRate","rand","Math","random","dir","nextLoc","slice","nextLocReward","changeInReward","gameover","type","max","qVals","newQ","chooseMove","agent","exploitProb","square","options","forEach","val","push","floor","onmessage","e","data","postMessage"],"mappings":"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","file":"cfb6bf3bdc9c9c886b7f.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/qlearn-game/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","export const COST_OF_LIVING_DEFAULT = -0.2;\r\nexport const GREEN_REWARD = 10;\r\nexport const RED_COST = -10;\r\nexport const DISCOUNT = 0.001;\r\nexport const LEARNING_RATE = 0.001;\r\nexport const FAIL_RATE_DEFAULT = 0.1;\r\nexport const ROWS = 5;\r\nexport const COLS = 10;\r\nexport const MODES = Object.freeze({\r\n  HUMAN_PLAY: \"Human Play\",\r\n  BOT_PLAY: \"Bot Play\",\r\n  BOT_TRAIN: \"Bot Train\"\r\n});\r\nexport const DISPLAY_Q_VALUES = false;\r\nexport const EPSILON = 0.8;\r\n","import { RED_COST, GREEN_REWARD, DISCOUNT, LEARNING_RATE } from \"./constants\";\r\n\r\n/* Given an array of objects grid, and an intended direction integer from 0-3\r\n * representing left, up, right, or down, a costOfLiving representing base changes\r\n * change in reward for each move and a failRate indicating likelihood of\r\n * turning left or right unintentionally\r\n * Returns the agents nextLocation, the change in reward, the updated qval,\r\n * and whether or not it was gameover\r\n */\r\nexport const move = (grid, intendedDir, agentLoc, costOfLiving, failRate) => {\r\n  const rand = Math.random();\r\n  let dir = intendedDir;\r\n  if (rand < failRate / 2) {\r\n    dir++;\r\n  } else if (rand < failRate) {\r\n    dir--;\r\n  }\r\n  dir = dir % 4;\r\n\r\n  let nextLoc = agentLoc.slice();\r\n  switch (dir) {\r\n    case 0: // left\r\n      nextLoc[1]--;\r\n      break;\r\n    case 1: // up\r\n      nextLoc[0]--;\r\n      break;\r\n    case 2: // right\r\n      nextLoc[1]++;\r\n      break;\r\n    case 3: // down\r\n      nextLoc[0]++;\r\n      break;\r\n    default:\r\n  }\r\n\r\n  if (\r\n    nextLoc[0] < 0 ||\r\n    nextLoc[0] >= grid.length ||\r\n    nextLoc[1] < 0 ||\r\n    nextLoc[1] >= grid[0].length\r\n  ) {\r\n    nextLoc = agentLoc; // bring back to previous spot\r\n  }\r\n\r\n  let changeInReward = costOfLiving;\r\n  let nextLocReward;\r\n  let nextType = grid[nextLoc[0]][nextLoc[1]].type;\r\n  let gameover = false;\r\n  switch (nextType) {\r\n    case \"normal\":\r\n      nextLocReward = Math.max(...grid[nextLoc[0]][nextLoc[1]].qVals);\r\n      break;\r\n    case \"wall\":\r\n      nextLoc = agentLoc;\r\n      nextLocReward = Math.max(...grid[nextLoc[0]][nextLoc[1]].qVals);\r\n      break;\r\n    case \"reward\":\r\n      changeInReward += GREEN_REWARD;\r\n      gameover = true;\r\n      break;\r\n    case \"cost\":\r\n      changeInReward += RED_COST;\r\n      gameover = true;\r\n      break;\r\n    default:\r\n  }\r\n\r\n  if (gameover) {\r\n    nextLoc = [0, 0];\r\n    nextLocReward = 0;\r\n  }\r\n\r\n  const prevQ = grid[agentLoc[0]][agentLoc[1]].qVals[intendedDir];\r\n\r\n  const proposedQ = changeInReward + (1 - DISCOUNT) * nextLocReward;\r\n  const newQ = prevQ * (1 - LEARNING_RATE) + proposedQ * LEARNING_RATE;\r\n  return { nextLoc, newQ, changeInReward, gameover };\r\n};\r\n\r\n/* Takes a 2d array of objects grid and array agent ([row,col])\r\n * With probability exploitProb returns a best direction based on qvals\r\n * Otherwise returns a random move\r\n */\r\nexport function chooseMove(grid, agent, exploitProb) {\r\n  if (Math.random() < exploitProb) {\r\n    // best move\r\n    let square = grid[agent[0]][agent[1]];\r\n    let max = Math.max(...square.qVals);\r\n    let options = [];\r\n\r\n    square.qVals.forEach((val, i) => {\r\n      if (val === max) {\r\n        options.push(i);\r\n      }\r\n    });\r\n    return options[Math.floor(Math.random() * options.length)];\r\n  } else {\r\n    // explore\r\n    return Math.floor(Math.random() * 4);\r\n  }\r\n}\r\n","import { move, chooseMove } from \"./gameLogic\";\r\nimport { EPSILON } from \"./constants\";\r\n\r\n/* Recieves event with 2d array of objects grid, agent ([row],[col]),\r\n * costOfLiving (numer) and failRate (number)\r\n * Does 10,000,000 moves and updates q values, returning a grid w/ updates\r\n * and no agent on any of the grid squares\r\n */\r\nonmessage = e => {\r\n  if (!e) return;\r\n  let { grid, agent, costOfLiving, failRate } = e.data;\r\n\r\n  grid[agent[0]][agent[1]].agent = false;\r\n\r\n  for (let i = 0; i < 10000000; i++) {\r\n    let intendedDir = chooseMove(grid, agent, EPSILON);\r\n\r\n    const { nextLoc, newQ } = move(\r\n      grid,\r\n      intendedDir,\r\n      agent,\r\n      costOfLiving,\r\n      failRate\r\n    );\r\n\r\n    grid[agent[0]][agent[1]].qVals[intendedDir] = newQ;\r\n    agent = nextLoc;\r\n  }\r\n\r\n  postMessage(grid);\r\n};\r\n"],"sourceRoot":""}